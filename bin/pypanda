#!/usr/bin/env python

'''
Run PyPanda algorithm from the command line.
'''

import sys
import getopt
import pandas as pd
from pypanda import Panda
from pypanda import Lioness

def main(argv):
    '''
    Run pypuma.
    -h help
    -e (required) expression values
    -m (optional) pair file of motif edges, when not provided analysis continues with pearson correlation matrix
    -p (optional) pair file of PPI edges
    -f (optional) remove missing values (default is Fales)
    -o (required) output file
    -q (optional) output lioness single sample network
    '''
    #create variables

    # Ale weet ik veel
    s1,s2,t1,t2 = 0,1,1,2

    expression_data = None
    motif = None
    ppi = None
    remove_missing = False
    output_file = None
    lioness_output_file = None
    help_text = 'pypanda options:\n\
                \t-e (required)<expression_data.txt>\n\
                \t-m (optional, when not provided Pearson correlation network is used)<motif_data.txt>\n\
                \t-p (optional)<ppi_data.txt>\n\
                \t-f (optional)<remove missing (True/False)>\n\
                \t-o (required)<output_file_name>\n\
                \t-s1 (required)<s1>\n\
                \t-s2 (required)<s2>\n\
                \t-t1 (required)<t1>\n\
                \t-t2 (required)<t2>\n\
                \t-q (optional)<lioness_output_file_name>\n\
                 '
    #get input options
    try:
        opts, args = getopt.getopt(argv, 'he:m:p:f:o:q:', ['help', 'expression=', 'motif=', 'ppi=', 'remove=', 'out=', 's1=', 's2=', 't1=', 't2='])
    except getopt.GetoptError:
        print help_text
        sys.exit()
    for opt, arg in opts:
        if opt == '-h':
            print help_text
            sys.exit()
        if opt == '-e':
            expression_data = arg
        if opt == '-m':
            motif = arg
        if opt == '-p':
            ppi = arg
        if opt == '-f':
            if arg == 'True':
                remove_missing = True
            elif arg == 'False':
                remove_missing = False
        if opt == '-o':
            output_file = arg
        if opt == '-s1':
            s1 = arg
        if opt == '-s2':
            s2 = arg
        if opt == '-t1':
            t1 = arg
        if opt == '-t2':
            t2 = arg
        if opt == '-q':
            lioness_output_file = arg
    #check if required options are given
    if expression_data == None or output_file == None:
        print 'Missing input'
        print help_text
        sys.exit()

    #run panda
    # Ale: s1, s2, t1, t2 placed before ppi matrix because of syntax (ppi is by default None, and therefore must go after s1, s2, t1, t2 which as far as i know have no default values)
    p = Panda(expression_data, motif, s1, s2, t1, t2, ppi, remove_missing=remove_missing)
    #save results
    p.save_panda_results(file=output_file)
    print 'Finished Panda run...'
    #run lioness
    if lioness_output_file!=None:
        l = Lioness(p)
        l.save_lioness_results(file=lioness_output_file)
        print 'Finished Lioness run...'

    return None

if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
